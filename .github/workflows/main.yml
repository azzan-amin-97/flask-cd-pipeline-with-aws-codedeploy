name: CI/CD Pipeline

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  continuous-integration:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Set up Python Version
      - name: Set up Python all python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: x64
      
      # Install all the app dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      # Build the app and run tests
      - name: Build and Run Test
        run: python app_test.py & python -m unittest run_test
        
  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:
    # Set up Python Version
    - name: Set up Python all python version
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x64
    - name: Check File List
      run: ls
      
    - name: Install dependencies
      run: pip install -r requirements.txt
      
    - name: AWS Deploy push
      uses: ItsKarma/aws-cli@v1.70.0
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: "us-east-2"
      with:
        args: >-
          deploy push
          --application-name flask-app
          --description "This is a revision for the flask-app"
          --ignore-hidden-files
          --s3-location s3://tlo-scs-report/code-deploy/application.zip
          --source .
    - name: AWS Create Deploy
      uses: ItsKarma/aws-cli@v1.70.0
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: "us-east-2"
      with:
        args: >-
          deploy create-deployment
          --application-name flask-app
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name Testing
          --file-exists-behavior OVERWRITE
          --s3-location bucket=tlo-scs-report,key=code-deploy/application.zip,bundleType=zip

